
# https://realpython.com/beautiful-soup-web-scraper-python/

import requests
from bs4 import BeautifulSoup
import pandas as pd

# instatiate lists to append to for dataframe/csv
title = []
URL_add = []

URL = "https://www.ictergezocht.nl/ict-vacatures/?what=Data+Analist&where=Amsterdam&r=10&submit_homesearch="
page = requests.get(URL)

# create Beautiful Soup object that takes scraped HTML content as input and use appropriate parser
soup = BeautifulSoup(page.content, "html.parser")

# find specific element by id
results = soup.find(id="list_result")
# find elements by HTM class name
job_elems = results.find_all("div", class_="content_block vacitem")  # job_elems has type(class 'bs4.element.ResultSet')

# iterate over job_elems to look at specific details of each one
for job_elem in job_elems:
    # returing the normal way returns all HTML, we only want the text content and strip leading and trailing white spaces
    title_elem = job_elem.find("a", class_="title").text.strip()  # title_elem = type(str); job_elem = type(class 'bs4.element.Tag')
    title.append(title_elem)
    # all in one line, =short, but readable?:
    # title.append(title_elem.find("a", class_="title").text.strip()

    URL_elem = job_elem.find_all("a", href=True)
    for el in URL_elem:
        URL_add.append(el["href"])

    '''
    alternative for URL (does work for ICTergezocht.nl not on monsterboard.com!?)
    URL_elem = job_elem.find("a").get("href")  # 'a' = all hyperlinks, extracts only href (=URL), also when 'a' includes more information about the HTML element (class, src, etc.)
    URL_add.append(URL_elem)
    '''

    # solve "AttributeError: 'NoneType' object has no attribute 'text'": some items have value None; Continue skips the iteration for this item and continues with the next item
    if None in (title_elem, URL_elem):
        continue

# output in dataframe
output = pd.DataFrame({"Title": title, "URL": URL_add})
print(output)

# output in CSV
# CSV: adjust separator, so comma in title does not cause problem when processing in CSV
output.to_csv("icter.csv", sep="*")
