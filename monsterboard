# https://realpython.com/beautiful-soup-web-scraper-python/

import requests
from bs4 import BeautifulSoup
import pandas as pd

# instatiate lists to append to for dataframe/csv
title = []
URL_add = []

URL = "https://www.monster.com/jobs/search/?q=Software-Developer&where=Netherlands"
page = requests.get(URL)

# create Beautiful Soup object that takes scraped HTML content as input and use appropriate parser
soup = BeautifulSoup(page.content, "html.parser")

# find specific element by id
results = soup.find(id="ResultsContainer")
# find elements by HTM class name
job_elems = results.find_all("section", class_="card-content")  # job_elems has type(class 'bs4.element.ResultSet')

# iterate over job_elems to look at specific details of each one
for job_elem in job_elems:
    title_elem = job_elem.find("h2", class_="title")  # title_elem = type(class 'bs4.element.Tag'); job_elem = type(class 'bs4.element.Tag')

    # title.append(title_elem)  # including NoneType items - > results here in Attribute error when stripping text!

    URL_elem = job_elem.find_all("a", href=True)
    for el in URL_elem:
        URL_add.append(el["href"])  # or (el.get("href"))

    # solve "AttributeError: 'NoneType' object has no attribute 'text'": some items have value None; Continue skips the iteration for this item and continues with the next item
    if None in (title_elem, URL_elem):
        continue

    # make list of titles, use just the text part of the HTML data
    title.append(title_elem.text.strip())

# output in dataframe
output = pd.DataFrame({"Title": title, "URL": URL_add})
print(output)

# output in CSV
# CSV: adjust separator, so comma in title does not cause problem when processing in CSV
output.to_csv("scrapeMonster.csv", sep="*")
